name: "Test"
on:
  pull_request:
  push:
    branches:
      - master
      - dev/nix-not-nixos

env:
  CURRENT_STABLE_CHANNEL: nixos-24.05

jobs:
  test-stable:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install nix corresponding to latest stable channel
      uses: cachix/install-nix-action@v30
      with:
        install_url: https://releases.nixos.org/nix/nix-2.18.8/install
    - run: nix flake check --override-input nixpkgs nixpkgs/${{ env.CURRENT_STABLE_CHANNEL }}

  test-unstable:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install nix from current unstable channel
      uses: cachix/install-nix-action@v30
      with:
        install_url: https://releases.nixos.org/nix/nix-2.24.9/install
    - run: nix flake check --override-input nixpkgs nixpkgs/nixpkgs-unstable

  install-against-stable:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install nix corresponding to latest stable channel
      uses: cachix/install-nix-action@v30
      with:
        install_url: https://releases.nixos.org/nix/nix-2.18.8/install
        nix_path: nixpkgs=channel:${{ env.CURRENT_STABLE_CHANNEL }}
    - name: Install channels
      run: |
        nix-channel --add https://github.com/LnL7/nix-darwin/archive/master.tar.gz darwin
        nix-channel --add https://nixos.org/channels/${{ env.CURRENT_STABLE_CHANNEL }} nixpkgs
        nix-channel --update
    - name: Install nix-not-nixos and test
      run: |
        export NIX_PATH=$HOME/.nix-defexpr/channels

        nix-shell -A installer || true
        mkdir -p ~/.config/nix-not-nixos
        cp modules/examples/simple.nix ~/.config/nix-not-nixos/configuration.nix

        nixConfHash=$(shasum -a 256 /etc/nix/nix.conf | cut -d ' ' -f 1)
        /usr/bin/sed -i.bak \
          "s/# programs.fish.enable = true;/nix.settings.access-tokens = [ \"github.com=\${{ secrets.GITHUB_TOKEN }}\" ]; environment.etc.\"nix\/nix.conf\".knownSha256Hashes = [ \"$nixConfHash\" ];/" \
          ~/.config/nix-not-nixos/configuration.nix

        nix run .#linux-rebuild \
          -- switch \
          -I linux-config=$HOME/.config/nix-not-nixos/configuration.nix
    - name: Switch to new configuration
      run: |
        . /etc/bash.bashrc

        /usr/bin/sed -i.bak \
          "s/pkgs.vim/pkgs.hello/" \
          ~/.config/nix-not-nixos/configuration.nix

        linux-rebuild switch -I linux=.

        hello
    - name: Test uninstallation of nix-darwin
      run: |
        # We need to specify `--extra-experimental-features` because `experimental-features` is set by
        # `cachix/install-nix-action` but not by our default config above
        nix run .#linux-uninstaller \
          --extra-experimental-features "nix-command flakes" \
          --override-input nixpkgs nixpkgs/${{ env.CURRENT_STABLE_CHANNEL }}
        nix run .#linux-uninstaller.tests.uninstaller \
          --extra-experimental-features "nix-command flakes" \
          --override-input nixpkgs nixpkgs/${{ env.CURRENT_STABLE_CHANNEL }}

  install-against-unstable:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Install nix from current unstable channel
      uses: cachix/install-nix-action@v30
      with:
        install_url: https://releases.nixos.org/nix/nix-2.24.9/install
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Install channels
      run: |
        nix-channel --add https://github.com/LnL7/nix-darwin/archive/master.tar.gz darwin
        nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs
        nix-channel --update
    - name: Install nix-not-nixos
      run: |
        export NIX_PATH=$HOME/.nix-defexpr/channels

        mkdir -p ~/.config/nix-not-nixos
        cp modules/examples/simple.nix ~/.config/nix-not-nixos/configuration.nix

        nixConfHash=$(shasum -a 256 /etc/nix/nix.conf | cut -d ' ' -f 1)
        /usr/bin/sed -i.bak \
          "s/# programs.fish.enable = true;/nix.settings.access-tokens = [ \"github.com=\${{ secrets.GITHUB_TOKEN }}\" ]; environment.etc.\"nix\/nix.conf\".knownSha256Hashes = [ \"$nixConfHash\" ];/" \
          ~/.config/nix-not-nixos/configuration.nix

        nix run .#linux-rebuild \
          -- switch \
          -I linux-config=$HOME/.config/nix-not-nixos/configuration.nix
    - name: Switch to new configuration
      run: |
        . /etc/bash.bashrc

        /usr/bin/sed -i.bak \
          "s/pkgs.vim/pkgs.hello/" \
          ~/.config/nix-not-nixos/configuration.nix

        linux-rebuild switch -I linux=.

        hello
    - name: Test uninstallation of nix-not-nixos
      run: |
        # We need to specify `--extra-experimental-features` because `experimental-features` is set by
        # `cachix/install-nix-action` but not by our default config above
        nix run .#linux-uninstaller \
           --extra-experimental-features "nix-command flakes" \
           --override-input nixpkgs nixpkgs/nixpkgs-unstable
        nix run .#linux-uninstaller.tests.uninstaller \
           --extra-experimental-features "nix-command flakes" \
           --override-input nixpkgs nixpkgs/nixpkgs-unstable

  install-flake-against-stable:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install nix version corresponding to latest stable channel
      uses: cachix/install-nix-action@v30
      with:
        install_url: https://releases.nixos.org/nix/nix-2.18.8/install
    - name: Install nix-not-nixos
      run: |
        mkdir -p ~/.config/nix-not-nixos
        linux=$(pwd)
        pushd ~/.config/nix-not-nixos
          nix flake init -t $linux
          nixConfHash=$(shasum -a 256 /etc/nix/nix.conf | cut -d ' ' -f 1)
          /usr/bin/sed -i.bak \
            "s/# programs.fish.enable = true;/nix.settings.access-tokens = [ \"github.com=\${{ secrets.GITHUB_TOKEN }}\" ]; environment.etc.\"nix\/nix.conf\".knownSha256Hashes = [ \"$nixConfHash\" ];/" \
            flake.nix
          /usr/bin/sed -i.bak \
            's/nixpkgs.hostPlatform = "aarch64-darwin";/nixpkgs.hostPlatform = "'$(nix eval --expr builtins.currentSystem --impure --raw)'";/' \
            flake.nix
        popd
        nix run .#linux-rebuild -- \
          switch --flake ~/.config/nix-not-nixos#simple \
          --override-input nix-not-nixos . \
          --override-input nixpkgs nixpkgs/${{ env.CURRENT_STABLE_CHANNEL }}
    - name: Switch to new configuration
      run: |
        . /etc/bash.bashrc

        /usr/bin/sed -i.bak \
          "s/pkgs.vim/pkgs.hello/" \
          ~/.config/nix-not-nixos/flake.nix

        linux-rebuild switch --flake ~/.config/nix-not-nixos#simple \
          --override-input nix-not-nixos . \
          --override-input nixpkgs nixpkgs/${{ env.CURRENT_STABLE_CHANNEL }}

        hello
    - name: Test uninstallation of nix-darwin
      run: |
        nix run .#linux-uninstaller --override-input nixpkgs nixpkgs/${{ env.CURRENT_STABLE_CHANNEL }}
        nix run .#linux-uninstaller.tests.uninstaller --override-input nixpkgs nixpkgs/${{ env.CURRENT_STABLE_CHANNEL }}

  install-flake-against-unstable:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Install nix from current unstable channel
      uses: cachix/install-nix-action@v30
      with:
        install_url: https://releases.nixos.org/nix/nix-2.24.9/install
    - name: Install nix-not-nixos
      run: |
        mkdir -p ~/.config/nix-not-nixos
        linux=$(pwd)
        pushd ~/.config/nix-not-nixos
          nix flake init -t $linux
          nixConfHash=$(shasum -a 256 /etc/nix/nix.conf | cut -d ' ' -f 1)
          /usr/bin/sed -i.bak \
            "s/# programs.fish.enable = true;/nix.settings.access-tokens = [ \"github.com=\${{ secrets.GITHUB_TOKEN }}\" ]; environment.etc.\"nix\/nix.conf\".knownSha256Hashes = [ \"$nixConfHash\" ];/" \
            flake.nix
          /usr/bin/sed -i.bak \
            's/nixpkgs.hostPlatform = "aarch64-darwin";/nixpkgs.hostPlatform = "'$(nix eval --expr builtins.currentSystem --impure --raw)'";/' \
            flake.nix
        popd
        nix run .#linux-rebuild -- \
          switch --flake ~/.config/nix-not-nixos#simple \
          --override-input nix-not-nixos . \
          --override-input nixpkgs nixpkgs/nixpkgs-unstable
    - name: Rebuild and activate simple flake, but this time using nix-not-nixos's flake interface
      run: |
        . /etc/static/bashrc
        linux-rebuild build --flake ./modules/examples/flake#simple --override-input nix-not-nixos . --override-input nixpkgs nixpkgs/nixpkgs-unstable
    - name: Switch to new configuration
      run: |
        . /etc/bash.bashrc

        /usr/bin/sed -i.bak \
          "s/pkgs.vim/pkgs.hello/" \
          ~/.config/nix-not-nixos/flake.nix

        linux-rebuild switch --flake ~/.config/nix-not-nixos#simple \
          --override-input nix-not-nixos . \
          --override-input nixpkgs nixpkgs/nixpkgs-unstable

        hello
    - name: Test uninstallation of nix-not-nixos
      run: |
        nix run .#linux-uninstaller --override-input nixpkgs nixpkgs/nixpkgs-unstable
        nix run .#linux-uninstaller.tests.uninstaller --override-input nixpkgs nixpkgs/nixpkgs-unstable
